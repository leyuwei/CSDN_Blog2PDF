<!DOCTYPE html>
<!-- saved from url=(0056)https://blog.csdn.net/jerryjbiao/article/details/7523110 -->
<html lang="zh-CN">
<head>
	
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<script type="text/javascript" charset="utf-8" src="scripts/apiaccept"></script>
    <meta name="renderer" content="webkit">
    <meta name="force-rendering" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="referrer" content="always">
	<script src="scripts/hm.js"></script>
	<script src="scripts/hm.js"></script>
	<script src="scripts/tingyun-rum-blog.js"></script>
    <link href="https://csdnimg.cn/public/favicon.ico" rel="SHORTCUT ICON">
	<link rel="stylesheet" href="scripts/detail.min.css">
	<link rel="stylesheet" href="scripts/chart.css">
	<link rel="stylesheet" href="scripts/charts.css">
	<link rel="stylesheet" href="scripts/skin3-template.min.css">
    <script src="scripts/jquery-1.9.1.min.js" type="text/javascript"></script>
	<link rel="stylesheet" href="scripts/ck_htmledit_views.css">
    <script src="scripts/main-1.0.6.js"></script>
	<link rel="stylesheet" href="scripts/blog_code.css">
	<link rel="stylesheet" href="scripts/sandalstrap.min.css">
    
	<style>
        .MathJax, .MathJax_Message, .MathJax_Preview{
            display: none
        }
    </style>
		
	<script src="scripts/share.js"></script>
	<link rel="stylesheet" type="text/css" href="scripts/goTop.min.css">
	<style type="text/css">pre{position: relative}pre:hover .hljs-button{display: block}.hljs-button{display: none;position: absolute;right: 4px;top: 4px;font-size: 12px;color: #4d4d4d;background-color: white;padding: 2px 8px;margin: 8px;border-radius: 4px;cursor: pointer; box-shadow: 0 2px 4px rgba(0,0,0,0.05), 0 2px 4px rgba(0,0,0,0.05);}.hljs-button:after{content: attr(data-title)}</style><style type="text/css">.hljs-ln{border-collapse:collapse}            .hljs-ln td{padding:0}            .hljs-ln-n{text-align: right;padding-right: 8px;}            .hljs-ln-n:before{content:attr(data-line-number)}</style><script type="text/javascript" src="scripts/baidu_opensug-1.0.0.js"></script><script src="scripts/sdk-csdn-smallflow.prod.0810.js"></script><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css"></style><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
	.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
	.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
	.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
	.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
	</style>
	<style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
	#MathJax_About.MathJax_MousePost {outline: none}
	.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
	.MathJax_MenuItem {padding: 2px 2em; background: transparent}
	.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
	.MathJax_MenuActive .MathJax_MenuArrow {color: white}
	.MathJax_MenuArrow.RTL {left: .5em; right: auto}
	.MathJax_MenuCheck {position: absolute; left: .7em}
	.MathJax_MenuCheck.RTL {right: .7em; left: auto}
	.MathJax_MenuRadioCheck {position: absolute; left: 1em}
	.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
	.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
	.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
	.MathJax_MenuDisabled {color: GrayText}
	.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
	.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
	.MathJax_ContextMenu:focus {outline: none}
	.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
	#MathJax_AboutClose {top: .2em; right: .2em}
	.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
	.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
	.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
	.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
	.MathJax_MenuClose:hover span {background-color: #CCC!important}
	.MathJax_MenuClose:hover:focus {outline: none}
	</style>
	<style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}</style>
	<style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
	.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
	</style>
	<style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
	#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
	#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
	#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
	</style>
	<style type="text/css">.MathJax_Preview {color: #888}
	#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
	#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
	.MathJax_Error {color: #CC0000; font-style: italic}
	</style>

	<link rel="stylesheet" href="scripts/share_style0_16.css">

	<style type="text/css">.T0{background-color: #fff;margin-bottom: 1px;margin-top: 1px;padding: 16px 24px;}.T0 .img-box img{width:96px;height:60px;margin-top: 6px;border-radius: 4px;}.T0 .content-box{ width: 100%;display:inline-block;margin-left: 8px;}.T0 .content-box h4{font-size: 18px;color: #3C3C3C;line-height: 24px;margin-bottom:4px;}.T0 .content-box h4:hover{color: #CA0C16;}.T0 .content-box .content{font-size: 14px;color: #6B6B6B;}</style><script type="text/javascript" async="" src="scripts/mixpanel-2-latest.min.js"></script><style type="text/css">.MJXp-script {font-size: .8em}
	.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
	.MJXp-bold {font-weight: bold}
	.MJXp-italic {font-style: italic}
	.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
	.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
	.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
	.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
	.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
	.MJXp-largeop {font-size: 150%}
	.MJXp-largeop.MJXp-int {vertical-align: -.2em}
	.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
	.MJXp-display {display: block; text-align: center; margin: 1em 0}
	.MJXp-math span {display: inline-block}
	.MJXp-box {display: block!important; text-align: center}
	.MJXp-box:after {content: " "}
	.MJXp-rule {display: block!important; margin-top: .1em}
	.MJXp-char {display: block!important}
	.MJXp-mo {margin: 0 .15em}
	.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
	.MJXp-denom {display: inline-table!important; width: 100%}
	.MJXp-denom > * {display: table-row!important}
	.MJXp-surd {vertical-align: top}
	.MJXp-surd > * {display: block!important}
	.MJXp-script-box > *  {display: table!important; height: 50%}
	.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
	.MJXp-script-box > *:last-child > * {vertical-align: bottom}
	.MJXp-script-box > * > * > * {display: block!important}
	.MJXp-mphantom {visibility: hidden}
	.MJXp-munderover {display: inline-table!important}
	.MJXp-over {display: inline-block!important; text-align: center}
	.MJXp-over > * {display: block!important}
	.MJXp-munderover > * {display: table-row!important}
	.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
	.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
	.MJXp-mtr {display: table-row!important}
	.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
	.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
	.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
	.MJXp-mlabeledtr {display: table-row!important}
	.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
	.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
	.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
	.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
	.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
	.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
	.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
	.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
	.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
	.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
	.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
	.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
	.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
	.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
	</style>
</head>
<body style="background-color:white">
	<div class="blog-content-box"><div class="blog-content-box">
	<div class="article-header-box">
		<div class="article-header">
			<div class="article-title-box">
				<span class="article-type type-1 float-left">原</span>				<h1 class="title-article">简单的程序诠释C++ STL算法系列之十五：swap</h1>
			</div>
			<div class="article-info-box">
				<div class="article-bar-top"></div>
				<div class="operating">
														</div>
			</div>
			
		</div>
	</div>
	<article>
		<div class="article_content clearfix csdn-tracking-statistics" data-dsm="post" data-mod="popu_307" data-pid="blog" id="article_content">
								            <link href="https://csdnimg.cn/release/phoenix/template/css/ck_htmledit_views-e2445db1a8.css" rel="stylesheet"/>
						<div class="htmledit_views">
                <p>      相信大家看到swap这个词都一定不会感到陌生，甚至会有这样想法：这不就是简单的元素交换嘛。的确，swap交换函数是仅次于Hello word这样老得不能老的词，然而，泛型算法东风，这个小小的玩意儿却在C++ STL中散发着无穷的魅力。本文不仅详细地阐述STL泛型算法swap，并借助泛型算法这股东风，展现STL容器中swap成员函数的神奇魅力。注意哦，泛型算法swap和容器中的swap成员函数，这是两个不同角度和概念哦！</p><p>    <strong> 一、泛型算法swap</strong></p><p>      老规矩，我们先来看看swap的函数原型：</p><p></p><pre style="background-color:#DDD"><code class="language-cpp">template &lt;class T&gt; void swap ( T&amp; a, T&amp; b )
{
  T c(a); a=b; b=c;
}
 </code></pre>      函数原型超级简单吧，这里我们就不做过多的解释啦，下面我们还是通过一个简单的示例来熟悉熟悉它的使用吧。<p></p><p>      <strong>程序示例：</strong></p><p></p><pre style="background-color:#DDD"><code class="language-cpp">/*******************************************************************
 * Copyright (C) Jerry Jiang
 *               
 * File Name   : swap.cpp
 * Author      : Jerry Jiang
 * Create Time : 2012-3-24 4:19:31
 * Mail        : jbiaojerry@gmail.com
 * Blog        : http://blog.csdn.net/jerryjbiao 
 *               
 * Description : 简单的程序诠释C++ STL算法系列之十五                  
 *               变易算法 : 元素交换swap   
 *               
 ******************************************************************/

#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#include &lt;vector&gt;
#include &lt;iterator&gt;

using namespace std;

int main () 
{
	
	int x = 10, y = 20;                         // x:10 y:20
	swap(x, y);                              // x:20 y:10
	
	vector&lt;int&gt; first (4, x), second (6, y);  // first:4x20 second:6x10
	swap(first, second);                     // first:6x10 second:4x20
	
	cout &lt;&lt; "first contains:";
	//使用一般的iterator方式输出first
	for (vector&lt;int&gt;::iterator it=first.begin();  it != first.end(); ++it)
	{
		cout &lt;&lt; " " &lt;&lt; *it;
	}
	cout &lt;&lt; endl;

	cout &lt;&lt; "second contains: ";
	//使用copy()来实现second的输出
	copy(second.begin(), second.end(), ostream_iterator&lt;int&gt;(cout, " "));
	cout &lt;&lt; endl;
	
	return 0;
}
</code></pre>          上面示例程序十分简单，只是为了巩固前文中copy算法的使用，我在程序中采用了两种方式进行输出，好了，泛型算法swap我们就不再废话了，现在我们来看看本文中的重头戏吧。<p></p><p>       <strong> 二、容器中的成员函数swap</strong></p><p>        在容器vector中，其内存占用的空间是只增不减的，比如说首先分配了10,000个字节，然后erase掉后面9,999个，则虽然有效元素只有一个，但是内存占用仍为10,000个。所有内存空间在vector析构时回收。</p><p>     <span></span>一般，我们都会通过vector中成员函数clear进行一些清除操作，但它清除的是所有的元素，使vector的大小减少至0，却不能减小vector占用的内存。要避免vector持有它不再需要的内存，这就需要一种方法来使得它从曾经的容量减少至它现在需要的容量，这样减少容量的方法被称为“收缩到合适（shrink to fit）”。（节选自《<a href="http://blog.csdn.net/jerryjbiao/article/details/7358796" rel="nofollow">Effective STL</a>》）如果做到“收缩到合适”呢，嘿嘿，这就要全仰仗“Swap大侠”啦，即通过如下代码进行释放过剩的容量：</p><p></p><pre style="background-color:#DDD"><code class="language-cpp">vector&lt; T &gt;(X).swap(X)    //shrink to fit 收缩到合适</code></pre><pre style="background-color:#DDD"><code class="language-cpp">vector&lt; T &gt;().swap(X)    // 清除X并最小化它的容量，可以理解为交换技巧的变体</code></pre>        下面我们通过一个简单的示例来show一下：<p></p><p></p><pre style="background-color:#DDD"><code class="language-cpp">/*******************************************************************
 * Copyright (C) Jerry Jiang
 *               
 * File Name   : swap.cpp
 * Author      : Jerry Jiang
 * Create Time : 2012-3-24 4:19:31
 * Mail        : jbiaojerry@gmail.com
 * Blog        : http://blog.csdn.net/jerryjbiao 
 *               
 * Description : 简单的程序诠释C++ STL算法系列之十五                  
 *               成员函数swap实现容器的内存释放   
 *               
 ******************************************************************/

#include &lt;iostream&gt;
#include &lt;algorithm&gt;
#include &lt;vector&gt;
#include &lt;iterator&gt;

using namespace std;

int main () 
{
	int x = 10;
	vector&lt;int&gt; myvector(10000, x);  

	//这里打印仅仅是元素的个数和容量
	cout &lt;&lt; "myvector size:"
		 &lt;&lt; myvector.size() &lt;&lt; "," &lt;&lt; myvector.capacity()
		 &lt;&lt; endl;

	//swap交换函数释放内存：vector&lt;T&gt;().swap(X);
	//T:int ; myvertor代表X
	vector&lt;int&gt;().swap(myvector);  // 这里是清除myvector并最小化它的大小

	//两个输出仅用来表示swap前后的变化
	cout &lt;&lt; "after swap :"
		 &lt;&lt; myvector.size() &lt;&lt; ", " &lt;&lt; myvector.capacity()
		 &lt;&lt; endl;

	return 0;
}
</code></pre><span></span>swap交换技巧实现内存释放思想：vector()使用vector的默认构造函数建立临时vector对象，再在该临时对象上调用swap成员，swap调用之后对象myvector占用的空间就等于一个默认构造的对象的大小，临时对象就具有原来对象v的大小，而该临时对象随即就会被析构，从而其占用的空间也被释放。<br/><blockquote style="border-bottom:medium none;border-left:medium none;border-top:medium none;border-right:medium none;"><p><br/></p><p></p><p>std::vector&lt;T&gt;(X).swap(X)</p><p>作用相当于：</p><p>{</p><p>std::vector&lt;T&gt;  temp(X);</p><p>temp.swap(X);</p><p>}</p><br/></blockquote><p>    注意：并不是所有的STL容器的clear成员函数的行为都和vector一样。事实上，其他容器的clear成员函数都会释放其内存。比如另一个和vector类似的顺序容器deque。<br/></p><p> </p><p>*******************************************************************************************************************************</p><p><span><strong>C++经典书目索引及资源下载：</strong></span><a href="http://blog.csdn.net/jerryjbiao/article/details/7358796" rel="nofollow"><span><strong>http://blog.csdn.net/jerryjbiao/article/details/7358796</strong></span></a></p><p>********************************************************************************************************************************</p><p><br/></p><p><span style="color:#ff0000;"><strong>更新申明：</strong></span></p><p>    这篇博文是我六年前在阅读《提高c++性能的编程技术》和《<a href="http://blog.csdn.net/jerryjbiao/article/details/7358796" rel="nofollow">Effective STL</a>》两本书籍的时候做的一些笔记，文章只代表个人当时的理解，并不一定都是完全正确的，由于工作原因后面几年基本停止更新了，但最近常用邮箱中收到了一些读者的人身攻击性和辱骂的邮件，本人十分反感这类伪技术喷子，希望大家本着技术人的精神，辩证地阅读和理解网络上的技术文章，更不要做伪技术喷子，多谢！</p><br/>            </div>
                </div>
				<div class="hide-article-box text-center">
			<a class="btn" data-track-click='{"mod":"popu_376","con":",https://blog.csdn.net/jerryjbiao/article/details/7389233,"}' data-track-view='{"mod":"popu_376","con":",https://blog.csdn.net/jerryjbiao/article/details/7389233,"}' id="btn-readmore">阅读更多</a>
			<a class="btn" data-track-click='{"mod":"popu_557","con":",https://blog.csdn.net/jerryjbiao/article/details/7389233,"}' data-track-view='{"mod":"popu_557","con":",https://blog.csdn.net/jerryjbiao/article/details/7389233,"}' href="https://passport.csdn.net/account/login?utm_source=csdn_blog_pc_more_login" id="btn-lobinreadmore" target="_self">登录后自动展开</a>
		</div>
        	</article>
	
</div>
</div>
</body>
</html>
